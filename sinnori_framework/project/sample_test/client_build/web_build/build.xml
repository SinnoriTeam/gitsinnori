<project name="sample_test_webclient" default="compile.webclass" basedir=".">
	<description>
		샘플 파일 송수신 웹 클라이언트
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="corelib" location="corelib" />
	<property name="lib" location="lib" />
	<property name="framework.build" location="../../../../core_build" />
	<property name="webclass" location="../../web_app_base/ROOT/WEB-INF/classes" />
	<property name="weblib" location="../../web_app_base/ROOT/WEB-INF/lib" />
	<property file="../../ant.properties" />
	<property name="servletlib" location="${tomcat.servletlib}" />
	
	<condition property="is.web.yes">
		<istrue value="${is.tomcat}" />
	</condition>

	<condition property="is.windows.yes">
		<os family="windows" />
	</condition>
	<condition property="is.unix.yes">
		<os family="unix" />
	</condition>	
	
	<condition property="java.debug.yes">
		<istrue value="${java.debug}" />
	</condition>
	
	<target name="java.debug.yes.init" if="java.debug.yes" description="framework with debug info">
		<property name="core.java.debug" value="debug" />
	</target>
	
	<target name="java.debug.no.init" unless="java.debug.yes" description="framework with no debug info">
		<property name="core.java.debug" value="nodebug" />
	</target>
	
	<target name="dos.init" if="is.windows.yes">
		<property name="weblib" location="${dos.weblib}" />
	</target>
	<target name="unix.init" if="is.unix.yes">
		<property name="weblib" location="${unix.weblib}" />
	</target>
	
	<target name="var.init" depends="java.debug.no.init, java.debug.yes.init, dos.init, unix.init" description="var init">
		<echo message="java.debug=${java.debug}, core.java.debug=${core.java.debug}" />
		<echo message="is.web.yes=${is.web.yes}, servletlib=${servletlib}" />		
	</target>

	
	<target name="unix.make.core" if="is.unix.yes">
		<echo message="유니스 신놀이 프레임 워크 컴파일후 jar 만들기" />
		<exec dir="${framework.build}" executable="ant">
			<arg value="${core.java.debug}" />
		</exec>
	</target>
	
	<target name="dos.make.core" if="is.windows.yes">
		<echo message="도스 신놀이 프레임 워크 컴파일후 jar 만들기" />
		<exec dir="${framework.build}" executable="cmd">
			<arg value="/c" />
			<arg value="ant.bat" />
			<arg value="${core.java.debug}" />
		</exec>
	</target>

	<target name="make.core" depends="var.init, dos.make.core, unix.make.core" description="신놀이 프레임 워크 컴파일 하여 jar 라이브러리 만들기" />
	
	<target name="corelib.clean" depends="var.init">
		<delete dir="${corelib}" />
	</target>

	<target name="corelib.init" depends="corelib.clean">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${corelib}/ex" />
		<mkdir dir="${corelib}/in" />	
	</target>
	
	<target name="copy.core" description="sinnori framework core copy" depends="corelib.init">
		<!-- 웹은 어떠한 jar 도 포함하지 않고 참조만 할 뿐이다. 
			따라서 sinnori-core.jar 는 corelib/in 이 아닌 corelib/ex 에 넣는다. -->
		<copy todir="${corelib}/ex" verbose="true" overwrite="true">
			<fileset file="${framework.build}/dist/sinnori-core.jar" />
		</copy>
		<copy todir="${corelib}/ex" verbose="true" overwrite="true">
			<fileset dir="${framework.build}/lib/ex/" />
		</copy>		
	</target>
	
	<target name="sinnori" depends="make.core, copy.core" description="신놀이 프레임 워크 컴파일후 jar 만들어 가져오기">
		<echo message="신놀이 프레임 워크 컴파일 하여  jar 라이브러리 만들어 가져오기" />
	</target>


	<target name="clean.weblib" depends="var.init" description="필요 경로 전체 삭제">	
			
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}/weblib" />
		<delete dir="${dist}" />
		<!-- delete dir="${webclass}/kr/pe/sinnori" / -->
		<delete dir="${webclass}" />
		<delete dir="${weblib}" />
	</target>

	<target name="init.weblib" depends="clean.weblib" description="필요 경로 전체 생성">
	
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}/weblib" />
		<mkdir dir="${dist}" />
		<mkdir dir="${webclass}" />
		<mkdir dir="${weblib}" />
	</target>

		
	<target name="compile.weblib" if="is.web.yes" depends="init.weblib" description="웹 라이브러리 컴파일">	
		<echo message="compile.weblib" />
		<!-- Compile the java code from ${src} into ${build}/weblib -->
		<javac debug="${java.debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${src}" destdir="${build}/weblib">
			<include name="kr/pe/sinnori/common/weblib/**" />
			<classpath>		    
				<pathelement location="${webclass}" />
				<fileset dir="${servletlib}">
					<include name="**/*-api.jar" />
				</fileset>
				<fileset dir="${corelib}\in">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${corelib}\ex">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib}\ex">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	
	<target name="make.weblib" depends="compile.weblib" description="웹 라이브러리 jar 만들기">
		<echo message="${build}/weblib" />	
		<jar jarfile="${dist}/sinnori-weblib.jar" basedir="${build}/weblib">
			<restrict>
				<name name="**/*.class" />
				<archives>
					<!-- 웹은 어떠한 jar 도 포함하지 않고 참조만 할 뿐이다.
						신놀이를 운영에 필요한 sinnori-core.jar 와 외부 jar 라이브러리들은 corelib/ex 로 복사되며,
						CATALINA_BASE/bin/setenv.sh 에서 corelib/ex 경로에 있는 
						모든 jar 파일들은 classpath 로 잡는다. -->
				</archives>
			</restrict>
		</jar>
	</target>
	
	
	<target name="dist.weblib" if="is.web.yes" depends="make.weblib" description="웹 라이브러리 jar 배포">
		<copy todir="${weblib}" verbose="true" overwrite="true">
			<fileset file="${dist}/sinnori-weblib.jar" />
			<fileset file="${lib}/ex/*.jar" />
		</copy>
	</target>
	
		
	<target name="compile.webclass" if="is.web.yes" depends="var.init" description="impl 밑에 있는 서블릿및 자바빈즈 컴파일">
		<echo message="compile.webclass" />
		<!-- Compile the java code from ${src}/impl/** into ${webclass} -->
		<javac debug="${java.debug}" debuglevel="lines,vars,source" encoding="UTF-8" 
		includeantruntime="false" srcdir="${src}" destdir="${webclass}"
		excludes="kr/pe/sinnori/common/**" >
			<classpath>
				<fileset dir="${dist}">
					<include name="sinnori-weblib.jar" />
				</fileset>
				<fileset dir="${servletlib}/">
					<include name="*-api.jar" />
				</fileset>
				<fileset dir="${corelib}\ex">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib}\ex">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	

	<target name="all" depends="sinnori, dist.weblib, compile.webclass" description="신놀이 프레임 워크 컴파일후 복사 그리고 웹 라이브러리 컴파일후 jar 만들어 배포 그리고 서블릿 컴파일">
		<echo message="is.windows.yes=${is.windows.yes}, is.unix.yes=${is.unix.yes}, java.debug=${java.debug}" />
	</target>
</project>
