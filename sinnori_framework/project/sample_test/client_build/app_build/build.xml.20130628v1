<project name="sample_simple_chat_appclient" default="only_make" basedir=".">
	<description>
        Application Client Project Of Sinnori Framework
    </description>
	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="lib" location="lib" />
	<property name="sinnori_framework_build" location="../../../sinnori_framework_build" />
	<property file="../../../sinnori_ant.properties" />
	
	<condition property="isWindows">
		<os family="windows" />
	</condition>
	<condition property="isUnix">
		<os family="unix" />
	</condition>
	
	<target name="dos.init" if="isWindows">
		<property name="weblib" location="${dos.weblib}" />
	</target>
	<target name="unix.init" if="isUnix">
		<property name="weblib" location="${unix.weblib}" />
	</target>
	<target name="var.init" depends="dos.init, unix.init" description="var init" />
	
	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
	</target>
	
	<target name="init" depends="clean">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>
	
	<target name="only_compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac debug="${java_debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${src}" destdir="${build}">
			<classpath>
				<fileset dir="${lib}/ex">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib}/in">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	
	<target name="only_make" depends="only_compile" description="move the main class to dist direcotry">
		<!-- Compile the java code from ${src} into ${build} -->
		<delete dir="${dist}" />
		
		<mkdir dir="${dist}/lib" />
		<copy todir="${dist}/lib" verbose="true" overwrite="true">
			<fileset dir="${lib}/ex" />
		</copy>
		
		
		<jar destfile="${dist}/SinnoriAppClientMain.jar" basedir="${build}">
			<restrict>
				<name name="**/*.class" />
				<archives>
					<zips>
						<fileset dir="${lib}/in" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
			<manifest>
				<attribute name="Main-Class" value="main.SinnoriAppClientMain" />
				<attribute name="Class-Path" value="lib/*.jar" />
			</manifest>
		</jar>
	</target>

	<target name="cleanall" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${lib}" />
	</target>

	<target name="initall" depends="cleanall">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<mkdir dir="${lib}/ex" />
		<mkdir dir="${lib}/in" />
	</target>

	<target name="unix_makejar_sinnori_framework" if="isUnix">
		<echo message="In Unix, exec sinnori_lib_server" />
		<exec dir="${sinnori_framework_build}" executable="ant" />
	</target>
	
	<target name="dos_makejar_sinnori_framework" if="isWindows">
		<echo message="In Windows, exec sinnori_impl_server" />
		<exec dir="${sinnori_framework_build}" executable="cmd">
			<arg value="/c" />
			<arg value="ant.bat" />
		</exec>
	</target>
	
	<target name="makejar_sinnori_framework" depends="initall, dos_makejar_sinnori_framework, unix_makejar_sinnori_framework" description="compile sinnori framework, then make jar">
		<echo message="In Unix, exec sinnori_lib_server" />
		<exec dir="${sinnori_framework_build}" executable="ant" />
	</target>
	
	<target name="copy_sinnori_framework" depends="makejar_sinnori_framework" description="compile sinnori framework">
		<copy todir="${lib}/in" verbose="true" overwrite="true">
			<fileset file="${sinnori_framework_build}/dist/sinnori_framework.jar" />
		</copy>
		<copy todir="${lib}/ex" verbose="true" overwrite="true">
			<fileset dir="${sinnori_framework_build}/lib/ex/" />
		</copy>
	</target>


	<target name="compile_all" depends="copy_sinnori_framework" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac debug="${java_debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${src}" destdir="${build}">
			<classpath>
				<fileset dir="${lib}/ex">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib}/in">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	
	<target name="make_all" depends="compile_all" description="move the main class to dist direcotry">
		<!-- Compile the java code from ${src} into ${build} -->
		<delete dir="${dist}" />
		
		<mkdir dir="${dist}/lib" />
		<copy todir="${dist}/lib" verbose="true" overwrite="true">
			<fileset dir="${lib}/ex" />
		</copy>
		
		<!-- mkdir dir="${dist}/main" />
		<copy todir="${dist}/main" verbose="true" overwrite="true">
			<fileset file="${build}/main/SinnoriServerMain.class" />
		</copy -->
		
		<jar destfile="${dist}/SinnoriAppClientMain.jar" basedir="${build}">
			<restrict>
				<name name="**/*.class" />
				<archives>
					<zips>
						<fileset dir="${lib}/in" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
			<manifest>
				<attribute name="Main-Class" value="main.SinnoriAppClientMain" />
				<attribute name="Class-Path" value="lib/*.jar" />
			</manifest>
		</jar>
	</target>
	
	
	<target name="all" depends="make_all" description="only compile and then make jar">
		<echo message="isWindows=${isWindows}, isUnix=${isUnix}, java_debug=${java_debug}" />
	</target>

</project>

