<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="codda_core_all" default="make.all" basedir=".">
	<description>codda core all</description>
	<!-- set global properties for this build -->
	<property name="dir.dist" location="dist" />
	<property name="dir.mainlib" location="lib/main" />
	<property name="dir.testsrc" location="src/test/java" />
	<property name="dir.testlib" location="lib/test" />
	<property name="dir.report" location="report" />
	
	<property name="dir.logger.build" location="../logger" />
	<property name="dir.core.common.build" location="../common" />
	<property name="dir.core.server.build" location="../server" />
	<property name="dir.core.client.build" location="../client" />	
	
	<property name="core.common.jar.name" value="codda-core-common.jar" />
	<property name="core.junitlib.jar.name" value="codda-core-junitlib.jar" />
	<property name="core.client.jar.name" value="codda-core-client.jar" />
	<property name="core.client.only.jar.name" value="codda-core-onlyclient.jar" />
	<property name="core.server.jar.name" value="codda-core-server.jar" />
	<property name="core.server.only.jar.name" value="codda-core-onlyserver.jar" />	
	<property name="core.all.jar.name" value="codda-core-all.jar" />
	
	<property name="java.complile.option.debug" value="on" />
	
	<condition property="is.windows.yes">
		<os family="windows" />
	</condition>

	<condition property="is.unix.yes">
		<os family="unix" />
	</condition>
	
	<union id="logback.jarlibs">
		<fileset file="${dir.logger.build}/lib/ex/slf4j-api-1.7.25.jar" />
		<fileset file="${dir.logger.build}/lib/ex/logback-core-1.2.3.jar" />
		<fileset file="${dir.logger.build}/lib/ex/logback-classic-1.2.3.jar" />
		<!-- dbcp2 depends Apache commons-logging(=jcl-over-slf4j) -->
		<fileset file="${dir.logger.build}/lib/ex/jcl-over-slf4j-1.7.25.jar" />
	</union>
	
	<union id="core.common.jarlibs">
		<fileset file="${dir.core.common.build}/lib/main/ex/commons-codec-1.11.jar" />
		<fileset file="${dir.core.common.build}/lib/main/ex/commons-collections4-4.1.jar" />
		<fileset file="${dir.core.common.build}/lib/main/ex/commons-io-2.6.jar" />
	</union>
	
	<union id="core.server.jarlibs">
		<fileset file="${dir.core.server.build}/lib/main/ex/commons-dbcp2-2.0.1.jar" />
		<fileset file="${dir.core.server.build}/lib/main/ex/commons-pool2-2.5.0.jar" />
	</union>
	
	<union id="core.all.jarlibs">
		<union refid="core.common.jarlibs" />
		<union refid="core.server.jarlibs" />
	</union>
	
	<union id="core.junitlib.jarlibs">
		<fileset file="${dir.core.common.build}/lib/test/hamcrest-core-1.3.jar" />
		<fileset file="${dir.core.common.build}/lib/test/junit-4.12.jar" />		
		<fileset file="${dir.core.common.build}/lib/test/byte-buddy-1.7.9.jar" />
		<fileset file="${dir.core.common.build}/lib/test/byte-buddy-agent-1.7.9.jar" />
		<fileset file="${dir.core.common.build}/lib/test/mockito-core-2.13.4.jar" />
		<fileset file="${dir.core.common.build}/lib/test/objenesis-2.6.jar" />
		<fileset file="${dir.core.common.build}/lib/test/commons-exec-1.3.jar" />
	</union>
	
	<target name="clean">
		<delete dir="${dir.dist}" />
	</target>

	<target name="init" depends="clean">
		<tstamp />
		<mkdir dir="${dir.dist}" />
		<echo message="java.complile.option.debug=${java.complile.option.debug}" />
	</target>
	
	<target name="unix.make.server" if="is.unix.yes" depends="init">
		<exec dir="${dir.core.server.build}" executable="ant" />
	</target>
	
	<target name="dos.make.server" if="is.windows.yes" depends="unix.make.server">
		<exec dir="${dir.core.server.build}" executable="cmd">
			<arg value="/c" />
			<arg value="ant.bat" />
		</exec>
	</target>
	
	<target name="make.only.server" depends="dos.make.server" />	
	
	<target name="copy.only.server" depends="make.only.server">
		<mkdir dir="${dir.mainlib}/in" />
		<mkdir dir="${dir.mainlib}/ex" />
		<copy todir="${dir.mainlib}/in" verbose="true" overwrite="true">
			<fileset file="${dir.core.common.build}/dist/${core.common.jar.name}" />
		</copy>
		<copy todir="${dir.mainlib}/in" verbose="true" overwrite="true">
			<fileset file="${dir.core.server.build}/dist/${core.server.only.jar.name}" />
		</copy>
		<copy todir="${dir.testlib}" verbose="true" overwrite="true">
			<fileset file="${dir.core.common.build}/dist/${core.junitlib.jar.name}" />
		</copy>		
	</target>	

	<target name="make.server" depends="copy.only.server">
		<jar jarfile="${dir.dist}/${core.server.jar.name}">
			<restrict>
				<archives>
					<zips>
						<fileset dir="${dir.mainlib}/in" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
		</jar>
	</target>
	
	<target name="unix.make.client" if="is.unix.yes" depends="make.server">
		<exec dir="${dir.core.client.build}" executable="ant" />
	</target>
	
	<target name="dos.make.client" if="is.windows.yes" depends="unix.make.client">
		<exec dir="${dir.core.client.build}" executable="cmd">
			<arg value="/c" />
			<arg value="ant.bat" />
		</exec>
	</target>
	
	<target name="make.only.client" depends="dos.make.client" />	
	
	<target name="copy.only.client" depends="make.only.client">		
		<copy todir="${dir.mainlib}/in" verbose="true" overwrite="true">
			<fileset file="${dir.core.client.build}/dist/${core.client.only.jar.name}" />
		</copy>
	</target>
	
	<target name="make.client" depends="copy.only.client">
		<jar jarfile="${dir.dist}/${core.client.jar.name}">
			<restrict>
				<archives>
					<zips>
						<fileset dir="${dir.mainlib}/in" includes="**/*.jar" excludes="${core.server.only.jar.name}" />
					</zips>
				</archives>
			</restrict>
		</jar>
	</target>
	
	<target name="make.all" depends="make.client">
		<jar jarfile="${dir.dist}/${core.all.jar.name}">
			<restrict>
				<archives>
					<zips>
						<fileset dir="${dir.mainlib}/in" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
		</jar>
	</target>
	
	<target name="clean.test">
		<delete dir="${dir.report}" />
		<mkdir dir="${dir.report}" />
		<delete dir="${dir.build}/test" />
		<mkdir dir="${dir.build}/test" />
	</target>
	
	<target name="compile.test">
		<mkdir dir="${dir.build}/test" />
		<javac debug="${java.complile.option.debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${dir.testsrc}" destdir="${dir.build}/test">			
			<classpath>
				<union refid="core.all.jarlibs" />
				<fileset file="${dir.dist}/${core.all.jar.name}" />
				
				<union refid="logback.jarlibs" />
				
				<union refid="core.junitlib.jarlibs" />
				<fileset dir="${dir.testlib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>		
	</target>
	
	<target name="test" depends="compile.test">
		<junit printsummary="yes" haltonerror="yes" haltonfailure="yes" fork="yes" showoutput="true">
			<formatter type="xml" />
			<classpath>
				<union refid="core.all.jarlibs" />
				<fileset file="${dir.dist}/${core.all.jar.name}" />
				
				<union refid="logback.jarlibs" />
				
				<union refid="core.junitlib.jarlibs" />
				<fileset dir="${dir.testlib}">
					<include name="**/*.jar" />
				</fileset>				
			</classpath>
			<classpath>
				<pathelement location="${dir.build}/test/"/>
			</classpath>
			
			<batchtest todir="${dir.report}"> 
				 <fileset dir="${dir.testsrc}">
					<include name="kr/pe/codda/**/*Test.java"/>
				 </fileset>
			</batchtest>
			
		</junit>
	</target>
</project>
