/*
 * This file is generated by jOOQ.
*/
package kr.pe.codda.impl.jooq.tables.records;


import javax.annotation.Generated;

import kr.pe.codda.impl.jooq.tables.SbBoardInfoTb;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SbBoardInfoTbRecord extends UpdatableRecordImpl<SbBoardInfoTbRecord> implements Record10<UByte, String, String, Byte, Byte, Byte, Byte, Integer, Integer, UInteger> {

    private static final long serialVersionUID = -1965005243;

    /**
     * Setter for <code>sb_db.sb_board_info_tb.board_id</code>. 게시판 식별자,
1 : 공지, 2:자유, 3:이슈
     */
    public void setBoardId(UByte value) {
        set(0, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.board_id</code>. 게시판 식별자,
1 : 공지, 2:자유, 3:이슈
     */
    public UByte getBoardId() {
        return (UByte) get(0);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.board_name</code>. 게시판 이름
     */
    public void setBoardName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.board_name</code>. 게시판 이름
     */
    public String getBoardName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.board_info</code>. 게시판 설명
     */
    public void setBoardInfo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.board_info</code>. 게시판 설명
     */
    public String getBoardInfo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.list_type</code>. 게시판 목록 형태, 0:그룹 루트로만 이루어진 목록, 1; 계층형 목록
     */
    public void setListType(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.list_type</code>. 게시판 목록 형태, 0:그룹 루트로만 이루어진 목록, 1; 계층형 목록
     */
    public Byte getListType() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.reply_policy_type</code>. 댓글 유형, 0:댓글없음, 1:본문글에만 댓글 허용, 2:본문및 댓글에 댓글 허용
     */
    public void setReplyPolicyType(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.reply_policy_type</code>. 댓글 유형, 0:댓글없음, 1:본문글에만 댓글 허용, 2:본문및 댓글에 댓글 허용
     */
    public Byte getReplyPolicyType() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.write_permission_type</code>. 본문 쓰기 권한 유형, 0:어드민, 1:일반인
     */
    public void setWritePermissionType(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.write_permission_type</code>. 본문 쓰기 권한 유형, 0:어드민, 1:일반인
     */
    public Byte getWritePermissionType() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.reply_permission_type</code>. 댓글 쓰기 권한 유형, 0:어드민, 1:일반인, 주) '댓글 쓰기 권한 유형'은 '상세 유형'에서 '0 댓글없음' 이 아닌 경우만 유효하다
     */
    public void setReplyPermissionType(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.reply_permission_type</code>. 댓글 쓰기 권한 유형, 0:어드민, 1:일반인, 주) '댓글 쓰기 권한 유형'은 '상세 유형'에서 '0 댓글없음' 이 아닌 경우만 유효하다
     */
    public Byte getReplyPermissionType() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.cnt</code>. 게시판 목록 개수
     */
    public void setCnt(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.cnt</code>. 게시판 목록 개수
     */
    public Integer getCnt() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.total</code>. 게시판 글 전체 개수
     */
    public void setTotal(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.total</code>. 게시판 글 전체 개수
     */
    public Integer getTotal() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>sb_db.sb_board_info_tb.next_board_no</code>. 다음 게시판 번호
     */
    public void setNextBoardNo(UInteger value) {
        set(9, value);
    }

    /**
     * Getter for <code>sb_db.sb_board_info_tb.next_board_no</code>. 다음 게시판 번호
     */
    public UInteger getNextBoardNo() {
        return (UInteger) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UByte> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<UByte, String, String, Byte, Byte, Byte, Byte, Integer, Integer, UInteger> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<UByte, String, String, Byte, Byte, Byte, Byte, Integer, Integer, UInteger> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field1() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.BOARD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.BOARD_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.BOARD_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.LIST_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.REPLY_POLICY_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.WRITE_PERMISSION_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.REPLY_PERMISSION_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.CNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field10() {
        return SbBoardInfoTb.SB_BOARD_INFO_TB.NEXT_BOARD_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte component1() {
        return getBoardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getBoardName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getBoardInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getListType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getReplyPolicyType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component6() {
        return getWritePermissionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component7() {
        return getReplyPermissionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component10() {
        return getNextBoardNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value1() {
        return getBoardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBoardName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getBoardInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getListType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getReplyPolicyType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getWritePermissionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getReplyPermissionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value10() {
        return getNextBoardNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value1(UByte value) {
        setBoardId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value2(String value) {
        setBoardName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value3(String value) {
        setBoardInfo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value4(Byte value) {
        setListType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value5(Byte value) {
        setReplyPolicyType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value6(Byte value) {
        setWritePermissionType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value7(Byte value) {
        setReplyPermissionType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value8(Integer value) {
        setCnt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value9(Integer value) {
        setTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord value10(UInteger value) {
        setNextBoardNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardInfoTbRecord values(UByte value1, String value2, String value3, Byte value4, Byte value5, Byte value6, Byte value7, Integer value8, Integer value9, UInteger value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SbBoardInfoTbRecord
     */
    public SbBoardInfoTbRecord() {
        super(SbBoardInfoTb.SB_BOARD_INFO_TB);
    }

    /**
     * Create a detached, initialised SbBoardInfoTbRecord
     */
    public SbBoardInfoTbRecord(UByte boardId, String boardName, String boardInfo, Byte listType, Byte replyPolicyType, Byte writePermissionType, Byte replyPermissionType, Integer cnt, Integer total, UInteger nextBoardNo) {
        super(SbBoardInfoTb.SB_BOARD_INFO_TB);

        set(0, boardId);
        set(1, boardName);
        set(2, boardInfo);
        set(3, listType);
        set(4, replyPolicyType);
        set(5, writePermissionType);
        set(6, replyPermissionType);
        set(7, cnt);
        set(8, total);
        set(9, nextBoardNo);
    }
}
