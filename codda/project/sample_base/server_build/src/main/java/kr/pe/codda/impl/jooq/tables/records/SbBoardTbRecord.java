/*
 * This file is generated by jOOQ.
*/
package kr.pe.codda.impl.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import kr.pe.codda.impl.jooq.tables.SbBoardTb;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SbBoardTbRecord extends UpdatableRecordImpl<SbBoardTbRecord> implements Record15<UInteger, UInteger, UShort, UInteger, UByte, UByte, String, String, String, UInteger, Integer, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 491818949;

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.board_no</code>. 글 번호
     */
    public void setBoardNo(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.board_no</code>. 글 번호
     */
    public UInteger getBoardNo() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.group_no</code>. 그룹 번호
     */
    public void setGroupNo(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.group_no</code>. 그룹 번호
     */
    public UInteger getGroupNo() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.group_sq</code>. 그룹 즉 동일한 그룹 번호(=group_no)  에서의 순번
     */
    public void setGroupSq(UShort value) {
        set(2, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.group_sq</code>. 그룹 즉 동일한 그룹 번호(=group_no)  에서의 순번
     */
    public UShort getGroupSq() {
        return (UShort) get(2);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.parent_no</code>. 부모 글 번호,  부모가 없는 경우  다른 말로 댓글 깊이가 0 인 글은 0 값을 갖는다.
     */
    public void setParentNo(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.parent_no</code>. 부모 글 번호,  부모가 없는 경우  다른 말로 댓글 깊이가 0 인 글은 0 값을 갖는다.
     */
    public UInteger getParentNo() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.depth</code>. 트리 깊이,  0 부터 시작하며 트리 깊이가 0 일 경우 최상위 글로써 최상위 글을 기준으로 이후 댓글이 달린다. 자식 글의 댓글 깊이는 부모 글의 댓글 깊이보다 1 이 크다.
     */
    public void setDepth(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.depth</code>. 트리 깊이,  0 부터 시작하며 트리 깊이가 0 일 경우 최상위 글로써 최상위 글을 기준으로 이후 댓글이 달린다. 자식 글의 댓글 깊이는 부모 글의 댓글 깊이보다 1 이 크다.
     */
    public UByte getDepth() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.board_id</code>. 게시판 종류 식별자, 어떤 게시판인지 설명하는 게시판 정보(board_info) 테이블을 바라본다.
     */
    public void setBoardId(UByte value) {
        set(5, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.board_id</code>. 게시판 종류 식별자, 어떤 게시판인지 설명하는 게시판 정보(board_info) 테이블을 바라본다.
     */
    public UByte getBoardId() {
        return (UByte) get(5);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.writer_id</code>. 작성자
     */
    public void setWriterId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.writer_id</code>. 작성자
     */
    public String getWriterId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.subject</code>. 제목
     */
    public void setSubject(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.subject</code>. 제목
     */
    public String getSubject() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.content</code>. 본문
     */
    public void setContent(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.content</code>. 본문
     */
    public String getContent() {
        return (String) get(8);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.attach_id</code>.
     */
    public void setAttachId(UInteger value) {
        set(9, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.attach_id</code>.
     */
    public UInteger getAttachId() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.view_cnt</code>. 조회수
     */
    public void setViewCnt(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.view_cnt</code>. 조회수
     */
    public Integer getViewCnt() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.board_st</code>. 게시판 상태, B : 블락, D : 삭제된 게시글, Y : 정상 게시글
     */
    public void setBoardSt(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.board_st</code>. 게시판 상태, B : 블락, D : 삭제된 게시글, Y : 정상 게시글
     */
    public String getBoardSt() {
        return (String) get(11);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.ip</code>.
     */
    public void setIp(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.ip</code>.
     */
    public String getIp() {
        return (String) get(12);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.reg_dt</code>. 최초 작성일
     */
    public void setRegDt(Timestamp value) {
        set(13, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.reg_dt</code>. 최초 작성일
     */
    public Timestamp getRegDt() {
        return (Timestamp) get(13);
    }

    /**
     * Setter for <code>SB_DB.SB_BOARD_TB.mod_dt</code>. 최근 수정일
     */
    public void setModDt(Timestamp value) {
        set(14, value);
    }

    /**
     * Getter for <code>SB_DB.SB_BOARD_TB.mod_dt</code>. 최근 수정일
     */
    public Timestamp getModDt() {
        return (Timestamp) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<UInteger, UInteger, UShort, UInteger, UByte, UByte, String, String, String, UInteger, Integer, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<UInteger, UInteger, UShort, UInteger, UByte, UByte, String, String, String, UInteger, Integer, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return SbBoardTb.SB_BOARD_TB.BOARD_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return SbBoardTb.SB_BOARD_TB.GROUP_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UShort> field3() {
        return SbBoardTb.SB_BOARD_TB.GROUP_SQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return SbBoardTb.SB_BOARD_TB.PARENT_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field5() {
        return SbBoardTb.SB_BOARD_TB.DEPTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field6() {
        return SbBoardTb.SB_BOARD_TB.BOARD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SbBoardTb.SB_BOARD_TB.WRITER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return SbBoardTb.SB_BOARD_TB.SUBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return SbBoardTb.SB_BOARD_TB.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field10() {
        return SbBoardTb.SB_BOARD_TB.ATTACH_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return SbBoardTb.SB_BOARD_TB.VIEW_CNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return SbBoardTb.SB_BOARD_TB.BOARD_ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return SbBoardTb.SB_BOARD_TB.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field14() {
        return SbBoardTb.SB_BOARD_TB.REG_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field15() {
        return SbBoardTb.SB_BOARD_TB.MOD_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getBoardNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getGroupNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UShort component3() {
        return getGroupSq();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component4() {
        return getParentNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte component5() {
        return getDepth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte component6() {
        return getBoardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getWriterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSubject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component10() {
        return getAttachId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getViewCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getBoardSt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component14() {
        return getRegDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component15() {
        return getModDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getBoardNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getGroupNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UShort value3() {
        return getGroupSq();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getParentNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value5() {
        return getDepth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value6() {
        return getBoardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getWriterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSubject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value10() {
        return getAttachId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getViewCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getBoardSt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value14() {
        return getRegDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value15() {
        return getModDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value1(UInteger value) {
        setBoardNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value2(UInteger value) {
        setGroupNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value3(UShort value) {
        setGroupSq(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value4(UInteger value) {
        setParentNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value5(UByte value) {
        setDepth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value6(UByte value) {
        setBoardId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value7(String value) {
        setWriterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value8(String value) {
        setSubject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value9(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value10(UInteger value) {
        setAttachId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value11(Integer value) {
        setViewCnt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value12(String value) {
        setBoardSt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value13(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value14(Timestamp value) {
        setRegDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord value15(Timestamp value) {
        setModDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardTbRecord values(UInteger value1, UInteger value2, UShort value3, UInteger value4, UByte value5, UByte value6, String value7, String value8, String value9, UInteger value10, Integer value11, String value12, String value13, Timestamp value14, Timestamp value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SbBoardTbRecord
     */
    public SbBoardTbRecord() {
        super(SbBoardTb.SB_BOARD_TB);
    }

    /**
     * Create a detached, initialised SbBoardTbRecord
     */
    public SbBoardTbRecord(UInteger boardNo, UInteger groupNo, UShort groupSq, UInteger parentNo, UByte depth, UByte boardId, String writerId, String subject, String content, UInteger attachId, Integer viewCnt, String boardSt, String ip, Timestamp regDt, Timestamp modDt) {
        super(SbBoardTb.SB_BOARD_TB);

        set(0, boardNo);
        set(1, groupNo);
        set(2, groupSq);
        set(3, parentNo);
        set(4, depth);
        set(5, boardId);
        set(6, writerId);
        set(7, subject);
        set(8, content);
        set(9, attachId);
        set(10, viewCnt);
        set(11, boardSt);
        set(12, ip);
        set(13, regDt);
        set(14, modDt);
    }
}
