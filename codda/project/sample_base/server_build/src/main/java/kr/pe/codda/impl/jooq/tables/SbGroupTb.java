/*
 * This file is generated by jOOQ.
*/
package kr.pe.codda.impl.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import kr.pe.codda.impl.jooq.Indexes;
import kr.pe.codda.impl.jooq.Keys;
import kr.pe.codda.impl.jooq.SbDb;
import kr.pe.codda.impl.jooq.tables.records.SbGroupTbRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SbGroupTb extends TableImpl<SbGroupTbRecord> {

    private static final long serialVersionUID = -1281859393;

    /**
     * The reference instance of <code>sb_db.sb_group_tb</code>
     */
    public static final SbGroupTb SB_GROUP_TB = new SbGroupTb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SbGroupTbRecord> getRecordType() {
        return SbGroupTbRecord.class;
    }

    /**
     * The column <code>sb_db.sb_group_tb.group_id</code>.
     */
    public final TableField<SbGroupTbRecord, Byte> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>sb_db.sb_group_tb.user_id</code>.
     */
    public final TableField<SbGroupTbRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>sb_db.sb_group_tb.reg_dt</code>.
     */
    public final TableField<SbGroupTbRecord, Timestamp> REG_DT = createField("reg_dt", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>sb_db.sb_group_tb</code> table reference
     */
    public SbGroupTb() {
        this(DSL.name("sb_group_tb"), null);
    }

    /**
     * Create an aliased <code>sb_db.sb_group_tb</code> table reference
     */
    public SbGroupTb(String alias) {
        this(DSL.name(alias), SB_GROUP_TB);
    }

    /**
     * Create an aliased <code>sb_db.sb_group_tb</code> table reference
     */
    public SbGroupTb(Name alias) {
        this(alias, SB_GROUP_TB);
    }

    private SbGroupTb(Name alias, Table<SbGroupTbRecord> aliased) {
        this(alias, aliased, null);
    }

    private SbGroupTb(Name alias, Table<SbGroupTbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SbDb.SB_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SB_GROUP_TB_PRIMARY, Indexes.SB_GROUP_TB_SB_GROUP_FK2_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SbGroupTbRecord> getPrimaryKey() {
        return Keys.KEY_SB_GROUP_TB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SbGroupTbRecord>> getKeys() {
        return Arrays.<UniqueKey<SbGroupTbRecord>>asList(Keys.KEY_SB_GROUP_TB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SbGroupTbRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SbGroupTbRecord, ?>>asList(Keys.SB_GROUP_FK1, Keys.SB_GROUP_FK2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbGroupTb as(String alias) {
        return new SbGroupTb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbGroupTb as(Name alias) {
        return new SbGroupTb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SbGroupTb rename(String name) {
        return new SbGroupTb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SbGroupTb rename(Name name) {
        return new SbGroupTb(name, null);
    }
}
