package kr.pe.sinnori.common.buildsystem;

import java.util.List;

import kr.pe.sinnori.common.etc.CommonStaticFinalVars;
import kr.pe.sinnori.common.mybatis.MybatisEnviroment;
import kr.pe.sinnori.common.mybatis.MybatisMapper;
import kr.pe.sinnori.common.type.LogType;

public abstract class BuildSystemFileContents {

	/** server_build/build.xml */
	public static String getServerAntBuildXMLFileContent(String mainProjectName, String serverMainClassFullName,
			String serverExecutableJarShortFileName) {
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.append("<project name=\"");
		stringBuilder.append(mainProjectName);
		stringBuilder.append("_server\" default=\"compile.appinf\" basedir=\".\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<!-- set global properties for this build -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.src\" location=\"src/main/java\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.build\" location=\"build\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.appinf\" location=\"APP-INF\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.dist\" location=\"dist\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.corelib\" location=\"corelib\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.mainlib\" location=\"lib/main\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.core.build\" location=\"../../../core_build\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"server.main.class\" value=\"");
		stringBuilder.append(serverMainClassFullName);
		stringBuilder.append("\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"server.main.jar\" value=\"");
		stringBuilder.append(serverExecutableJarShortFileName);
		stringBuilder.append("\" />\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"java.complile.option.debug\" value=\"on\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<condition property=\"is.windows.yes\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<os family=\"windows\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</condition>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<condition property=\"is.unix.yes\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<os family=\"unix\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</condition>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- Create the time stamp -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<tstamp />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <echo message=\"java.complile.option.debug=${java.complile.option.debug}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <echo message=\"is.windows.yes=${is.windows.yes}, is.unix.yes=${is.unix.yes}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  ");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- this server project lib directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.mainlib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.mainlib}/in\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.unixcore\" if=\"is.unix.yes\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<exec dir=\"${dir.core.build}\" executable=\"ant\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.doscore\" if=\"is.windows.yes\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<exec dir=\"${dir.core.build}\" executable=\"cmd\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<arg value=\"/c\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<arg value=\"ant.bat\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</exec>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.core\" depends=\"make.doscore, make.unixcore\" />\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"copy.core\" depends=\"make.core\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- core directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.corelib}\" />\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.corelib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.corelib}/in\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.corelib}/in\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset file=\"${dir.core.build}/dist/sinnori-core.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.corelib}/ex\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset dir=\"${dir.core.build}/lib/main/ex/\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"copy.appinf\" depends=\"copy.core\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- this server project dynamic classloader's resource directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.appinf}/classes\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.appinf}/classes\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.appinf}/resources\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.appinf}/resources\" verbose=\"true\" overwrite=\"false\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset dir=\"${dir.core.build}/APP-INF/resources/\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>");
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"compile.main\" depends=\"copy.appinf\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- this server project build directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.build}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.build}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t<javac debug=\"${java.complile.option.debug}\" debuglevel=\"lines,vars,source\" encoding=\"UTF-8\" includeantruntime=\"false\" srcdir=\"${dir.src}\" destdir=\"${dir.build}\" >");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<exclude name=\"kr/pe/sinnori/impl/**\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}/ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}/in\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}/ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}/in\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));		
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</javac>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"copy.distlib\" depends=\"compile.main\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- this server project dist directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.dist}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.dist}/lib\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.dist}/lib\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset dir=\"${dir.corelib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset dir=\"${dir.mainlib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<path id=\"build.classpath\">");
		stringBuilder.append(System.getProperty("line.separator"));
		
		
		stringBuilder.append("\t\t<fileset dir=\"${dir.core.build}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<include name=\"lib/main/ex/*.jar\"/>");		
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		
		stringBuilder.append("\t\t<fileset dir=\"${dir.mainlib}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<include name=\"ex/*.jar\"/>");		
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</fileset>");		
		stringBuilder.append(System.getProperty("line.separator"));
		
		stringBuilder.append("\t</path>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<pathconvert property=\"manifest.classpath\" pathsep=\" \">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <path refid=\"build.classpath\"/>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <mapper>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<chainedmapper>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t   <flattenmapper/>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t   <globmapper from=\"*.jar\" to=\"lib/*.jar\"/>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</chainedmapper>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  </mapper>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</pathconvert>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.main\" depends=\"copy.distlib\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<jar destfile=\"${dir.dist}/${server.main.jar}\" basedir=\"${dir.build}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<restrict>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<name name=\"**/*.class\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<archives>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<zips>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t\t<fileset dir=\"${dir.corelib}/in\" includes=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t\t<fileset dir=\"${dir.mainlib}/in\" includes=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t</zips>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</archives>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</restrict>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<manifest>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<attribute name=\"Main-Class\" value=\"${server.main.class}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<attribute name=\"Class-Path\" value=\"${manifest.classpath}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</manifest>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</jar>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"clean.appinf\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.appinf}/classes\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.appinf}/classes\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"compile.appinf\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t<javac debug=\"${java.complile.option.debug}\" debuglevel=\"lines,vars,source\" encoding=\"UTF-8\" includeantruntime=\"false\" srcdir=\"${dir.src}\" destdir=\"${dir.appinf}/classes\" >");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<include name=\"kr/pe/sinnori/impl/**\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}/ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}/in\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}/ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}/in\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</javac>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"all\" depends=\"make.main, compile.appinf\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("</project>");

		return stringBuilder.toString();
	}

	/** server_build/src/kr/pe/sinnori/impl/servertask/EchoServerTask.java */	
	/*public static String getEchoServerTaskContents() {
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.append("/*");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * Licensed to the Apache Software Foundation (ASF) under one or more");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * contributor license agreements.  See the NOTICE file distributed with");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * this work for additional information regarding copyright ownership.");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * The ASF licenses this file to You under the Apache License, Version 2.0");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * (the \"License\"); you may not use this file except in compliance with");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * the License.  You may obtain a copy of the License at");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * ");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" *      http://www.apache.org/licenses/LICENSE-2.0");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * ");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * Unless required by applicable law or agreed to in writing, software");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * distributed under the License is distributed on an \"AS IS\" BASIS,");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * See the License for the specific language governing permissions and");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * limitations under the License.");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" *\/");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("package kr.pe.sinnori.impl.servertask;");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("import kr.pe.sinnori.common.message.AbstractMessage;");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("import kr.pe.sinnori.impl.message.Echo.Echo;");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("import kr.pe.sinnori.server.LoginManagerIF;");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("import kr.pe.sinnori.server.executor.AbstractServerTask;");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("import kr.pe.sinnori.server.executor.LetterSender;");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("/**");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * Echo \uC11C\uBC84 \uD0C0\uC2A4\uD06C");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" * @author \"Won Jonghoon\"");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" *");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(" *\/");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("public final class EchoServerTask extends AbstractServerTask {\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t@Override");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\tpublic void doTask(String projectName,");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\tLoginManagerIF loginManager,");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\tLetterSender letterSender, AbstractMessage messageFromClient)");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\tthrows Exception {");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\tdoWork(projectName, letterSender, (Echo)messageFromClient);");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t}");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\tprivate void doWork(String projectName,");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\tLetterSender letterSender, Echo echoInObj)");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\tthrows Exception {");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\tEcho echoOutObj = new Echo();");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\techoOutObj.setRandomInt(echoInObj.getRandomInt());");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\techoOutObj.setStartTime(echoInObj.getStartTime());");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\tletterSender.addSyncMessage(echoOutObj);");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t}\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("}");
		stringBuilder.append(System.getProperty("line.separator"));
		return stringBuilder.toString();
	}*/

	/** client_build/app_build/build.xml */
	public static String getAppClientAntBuildXMLFileContents(String mainProjectName, String appclientMainClassFullName,
			String appclientExecutableJarShortFileName) {
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.append("<project name=\"");
		stringBuilder.append(mainProjectName);
		stringBuilder.append("_appclient\" default=\"make.main.only\" basedir=\".\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<!-- set global properties for this build -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.src\" location=\"src/main/java\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.build\" location=\"build\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.dist\" location=\"dist\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.corelib\" location=\"corelib\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.mainlib\" location=\"lib/main\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.core.build\" location=\"../../../../core_build\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"appclient.main.class\" value=\"");
		stringBuilder.append(appclientMainClassFullName);
		stringBuilder.append("\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"appclient.main.jar\" value=\"");
		stringBuilder.append(appclientExecutableJarShortFileName);
		stringBuilder.append("\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"java.complile.option.debug\" value=\"on\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<condition property=\"is.windows.yes\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<os family=\"windows\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</condition>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<condition property=\"is.unix.yes\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<os family=\"unix\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</condition>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<!-- Create the time stamp -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<tstamp />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <echo message=\"java.complile.option.debug=${java.complile.option.debug}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <echo message=\"is.windows.yes=${is.windows.yes}, is.unix.yes=${is.unix.yes}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.unixcore\" if=\"is.unix.yes\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<exec dir=\"${dir.core.build}\" executable=\"ant\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.doscore\" if=\"is.windows.yes\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<exec dir=\"${dir.core.build}\" executable=\"cmd\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<arg value=\"/c\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<arg value=\"ant.bat\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</exec>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.core\" depends=\"make.doscore, make.unixcore\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"copy.core\" depends=\"make.core\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- core directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.corelib}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.corelib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.corelib}/in\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.corelib}/in\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset file=\"${dir.core.build}/dist/sinnori-core.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.corelib}/ex\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset dir=\"${dir.core.build}/lib/main/ex/\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"compile.main\" depends=\"copy.core\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- this appclient project build directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.build}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.build}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.mainlib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.mainlib}/in\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t<javac debug=\"${java.complile.option.debug}\" debuglevel=\"lines,vars,source\" encoding=\"UTF-8\" includeantruntime=\"false\" srcdir=\"${dir.src}\" destdir=\"${dir.build}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}/ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}/in\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}/ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}/in\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</javac>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"copy.distlib\" depends=\"compile.main\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- this appclient project dist directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.dist}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.dist}/lib\" />\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.dist}/lib\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset dir=\"${dir.corelib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset dir=\"${dir.mainlib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<path id=\"build.classpath\">");
		
		
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<fileset dir=\"${dir.core.build}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<include name=\"lib/main/ex/*.jar\"/>");		
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<fileset dir=\"${dir.mainlib}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<include name=\"ex/*.jar\"/>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</fileset>");		
		stringBuilder.append(System.getProperty("line.separator"));
		
		/*stringBuilder.append("\t\t<fileset dir=\"${basedir}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<include name=\"dist/lib/*.jar\"/>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));*/
		
		
		
		stringBuilder.append("\t</path>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<pathconvert property=\"manifest.classpath\" pathsep=\" \">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <path refid=\"build.classpath\"/>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <mapper>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<chainedmapper>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t   <flattenmapper/>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t   <globmapper from=\"*.jar\" to=\"lib/*.jar\"/>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</chainedmapper>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  </mapper>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</pathconvert>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.main\" depends=\"copy.distlib\">\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<jar destfile=\"${dir.dist}/SinnoriAppClientRun.jar\" basedir=\"${dir.build}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<restrict>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<name name=\"**/*.class\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<archives>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<zips>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t\t<fileset dir=\"${dir.corelib}/in\" includes=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t\t<fileset dir=\"${dir.mainlib}/in\" includes=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t</zips>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</archives>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</restrict>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<manifest>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<attribute name=\"Main-Class\" value=\"${appclient.main.class}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<attribute name=\"Class-Path\" value=\"${manifest.classpath}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</manifest>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</jar>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"all\" depends=\"make.main\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"compile.main.only\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t<javac debug=\"${java.complile.option.debug}\" debuglevel=\"lines,vars,source\" encoding=\"UTF-8\" includeantruntime=\"false\" srcdir=\"${dir.src}\" destdir=\"${dir.build}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}/ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}/in\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}/ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}/in\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</javac>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.main.only\" depends=\"compile.main.only\">\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<jar destfile=\"${dir.dist}/SinnoriAppClientRun.jar\" basedir=\"${dir.build}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<restrict>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<name name=\"**/*.class\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<archives>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<zips>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t\t<fileset dir=\"${dir.corelib}/in\" includes=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t\t<fileset dir=\"${dir.mainlib}/in\" includes=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t</zips>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</archives>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</restrict>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<manifest>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<attribute name=\"Main-Class\" value=\"${appclient.main.class}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<attribute name=\"Class-Path\" value=\"${manifest.classpath}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</manifest>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</jar>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("</project>");
		return stringBuilder.toString();
	}

	/** client_build/web_build/build.xml */
	public static String getWebClientAntBuildXMLFileContents(String mainProjectName) {
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder	.append("<project name=\"");
		stringBuilder	.append(mainProjectName);
		stringBuilder	.append("_webclient\" default=\"compile.webclass.only\" basedir=\".\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<!-- set global properties for this build -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.src\" location=\"src/main/java\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.build\" location=\"build\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.dist\" location=\"dist\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.corelib\" location=\"corelib\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.mainlib\" location=\"lib/main\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.core.build\" location=\"../../../../core_build\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder
				.append("\t<property name=\"dir.webclass\" location=\"../../web_app_base/ROOT/WEB-INF/classes\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"dir.weblib\" location=\"../../web_app_base/ROOT/WEB-INF/lib\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property file=\"webAnt.properties\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"webclient.core.jar\" value=\"SinnoriWebLib.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<property name=\"java.complile.option.debug\" value=\"on\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<condition property=\"is.windows.yes\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<os family=\"windows\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</condition>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<condition property=\"is.unix.yes\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<os family=\"unix\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</condition>\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"init.dos\" if=\"is.windows.yes\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<property name=\"weblib\" location=\"${dos.weblib}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"init.unix\" if=\"is.unix.yes\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<property name=\"weblib\" location=\"${unix.weblib}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"init.var\" depends=\"init.dos, init.unix\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- Create the time stamp -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<tstamp />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <echo message=\"java.complile.option.debug=${java.complile.option.debug}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <echo message=\"is.windows.yes=${is.windows.yes}, is.unix.yes=${is.unix.yes}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<echo message=\"servlet.systemlib.path=${servlet.systemlib.path}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<!-- lib directory is a user define directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.mainlib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.unixcore\" if=\"is.unix.yes\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<exec dir=\"${dir.core.build}\" executable=\"ant\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.doscore\" if=\"is.windows.yes\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<exec dir=\"${dir.core.build}\" executable=\"cmd\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<arg value=\"/c\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<arg value=\"ant.bat\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</exec>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.core\" depends=\"make.doscore, make.unixcore\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"copy.core\" depends=\"make.core\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t  <!-- core directory -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.corelib}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.corelib}/ex\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.corelib}/ex\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset file=\"${dir.core.build}/dist/sinnori-core.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.corelib}/ex\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset dir=\"${dir.core.build}/lib/main/ex/\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"compile.weblib\" depends=\"copy.core\">\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.build}/weblib\" />\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.build}/weblib\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t<javac debug=\"${java.complile.option.debug}\" debuglevel=\"lines,vars,source\" encoding=\"UTF-8\" includeantruntime=\"false\" srcdir=\"${dir.src}\" destdir=\"${dir.build}/weblib\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<include name=\"kr/pe/sinnori/weblib/**\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<classpath>\t\t  ");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<pathelement location=\"${dir.webclass}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${servlet.systemlib.path}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*-api.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}\\ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}\\ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</javac>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"make.weblib\" depends=\"compile.weblib\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t <delete dir=\"${dir.dist}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.dist}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<jar jarfile=\"${dir.dist}/${webclient.core.jar}\" basedir=\"${dir.build}/weblib\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<restrict>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<name name=\"**/*.class\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<archives>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<!--");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\twebclient.core.jar is loaded by tomcat dynamic classloader.");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t\t\t\tsinnori core must not be loaded by tomcat dynamic classloader because of singleton pattern.");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t\t\t\tso webclient.core.jar doesn't inlucde sinnori core and sinnori core's extern libiary.");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\ttomcat referes to them using setenv.sh or setenv.bat.");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t-->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</archives>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</restrict>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</jar>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"dist.weblib\" depends=\"make.weblib\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t <mkdir dir=\"${dir.weblib}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t ");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<copy todir=\"${dir.weblib}\" verbose=\"true\" overwrite=\"true\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset file=\"${dir.dist}/${webclient.core.jar}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<fileset file=\"${dir.mainlib}/ex/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</copy>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"compile.webclass\" depends=\"dist.weblib\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t <!-- webclass directory is a user define directory that has the web-application dynamic classes -->");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.webclass}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.webclass}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t<javac debug=\"${java.complile.option.debug}\" debuglevel=\"lines,vars,source\" encoding=\"UTF-8\" ");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\tincludeantruntime=\"false\" srcdir=\"${dir.src}\" destdir=\"${dir.webclass}\"");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\texcludes=\"kr/pe/sinnori/weblib/**\" >");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.dist}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"${webclient.core.jar}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${servlet.systemlib.path}/\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"*-api.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}\\ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}\\ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</javac>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"all\" depends=\"compile.webclass\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t<echo message=\"is.windows.yes=${is.windows.yes}, is.unix.yes=${is.unix.yes}, java.debug=${java.complile.option.debug}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t<target name=\"clean.webclass\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<delete dir=\"${dir.webclass}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t<mkdir dir=\"${dir.webclass}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("<target name=\"compile.webclass.only\" depends=\"init.var\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append(
				"\t\t<javac debug=\"${java.complile.option.debug}\" debuglevel=\"lines,vars,source\" encoding=\"UTF-8\" ");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\tincludeantruntime=\"false\" srcdir=\"${dir.src}\" destdir=\"${dir.webclass}\"");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\texcludes=\"kr/pe/sinnori/common/**\" >");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t<classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.dist}\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"${webclient.core.jar}\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${servlet.systemlib.path}/\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"*-api.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.corelib}\\ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t<fileset dir=\"${dir.mainlib}\\ex\">");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t\t<include name=\"**/*.jar\" />");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t\t</fileset>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t\t</classpath>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t\t</javac>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("\t</target>");
		stringBuilder.append(System.getProperty("line.separator"));
		stringBuilder.append("</project>");
		return stringBuilder.toString();

	}

	/**
	 * server_build/<main project name>.sh or client_build/app_build/<main
	 * project name>Client.sh
	 */
	public static String getDosShellContents(String sinnoriInstalledPathString, String mainProjectName, 

			String jvmOptions, LogType logType, String workingPathString, String relativeExecutabeJarFileName) {
		final String dosShellLineSeparator = "^";
		
		String commonPartOfShellContents = getCommonPartOfShellContents(sinnoriInstalledPathString, mainProjectName, 

				jvmOptions, dosShellLineSeparator, logType, relativeExecutabeJarFileName);

		StringBuilder shellContentsBuilder = new StringBuilder();
		shellContentsBuilder.append("set OLDPWD=%CD%");
		shellContentsBuilder.append(System.getProperty("line.separator"));

		shellContentsBuilder.append("cd /D ");
		shellContentsBuilder.append(workingPathString);
		shellContentsBuilder.append(System.getProperty("line.separator"));

		shellContentsBuilder.append(commonPartOfShellContents);
		shellContentsBuilder.append(System.getProperty("line.separator"));

		shellContentsBuilder.append("cd /D %OLDPWD%");
		return shellContentsBuilder.toString();
	}

	/**
	 * server_build/<main project name>Server.bat or
	 * client_build/app_build/<main project name>Client.bat
	 */
	public static String getUnixShellContents(String sinnoriInstalledPathString, String mainProjectName, 

			String jvmOptions, LogType logType, String workingPathString, String relativeExecutabeJarFileName) {

		final String unixShellLineSeparator = "\\";
		
		String commonPartOfShellContents = getCommonPartOfShellContents(sinnoriInstalledPathString, mainProjectName, 
				jvmOptions, unixShellLineSeparator, logType, relativeExecutabeJarFileName);

		StringBuilder shellContentsBuilder = new StringBuilder();
		shellContentsBuilder.append("cd ");
		shellContentsBuilder.append(workingPathString);
		shellContentsBuilder.append(System.getProperty("line.separator"));

		shellContentsBuilder.append(commonPartOfShellContents);
		shellContentsBuilder.append(System.getProperty("line.separator"));

		shellContentsBuilder.append("cd -");
		return shellContentsBuilder.toString();
	}

	// FIXME!
	private static String getCommonPartOfShellContents(String sinnoriInstalledPathString, String mainProjectName, 
			String jvmOptions, String shellLineSeparator, LogType logType, String relativeExecutabeJarFileName) {
		StringBuilder commandPartBuilder = new StringBuilder();

		commandPartBuilder.append("java ");
		commandPartBuilder.append(jvmOptions);
		commandPartBuilder.append(" ").append(shellLineSeparator).append(System.getProperty("line.separator"));

		commandPartBuilder.append("-D");
		commandPartBuilder.append(CommonStaticFinalVars.JAVA_SYSTEM_PROPERTIES_KEY_LOGBACK_CONFIG_FILE);
		commandPartBuilder.append("=").append(
				BuildSystemPathSupporter.getLogbackConfigFilePathString(sinnoriInstalledPathString, mainProjectName));

		commandPartBuilder.append(" ").append(shellLineSeparator).append(System.getProperty("line.separator"));

		commandPartBuilder.append("-D");
		commandPartBuilder.append(CommonStaticFinalVars.JAVA_SYSTEM_PROPERTIES_KEY_SINNORI_LOG_PATH);
		commandPartBuilder.append("=").append(
				BuildSystemPathSupporter.getLogPathString(sinnoriInstalledPathString, mainProjectName, logType));

		commandPartBuilder.append(" ").append(shellLineSeparator).append(System.getProperty("line.separator"));

		commandPartBuilder.append("-D");
		commandPartBuilder.append(CommonStaticFinalVars.JAVA_SYSTEM_PROPERTIES_KEY_SINNORI_INSTALLED_PATH);
		commandPartBuilder.append("=").append(sinnoriInstalledPathString);

		commandPartBuilder.append(" ").append(shellLineSeparator).append(System.getProperty("line.separator"));

		commandPartBuilder.append("-D");
		commandPartBuilder.append(CommonStaticFinalVars.JAVA_SYSTEM_PROPERTIES_KEY_SINNORI_RUNNING_PROJECT_NAME);
		commandPartBuilder.append("=").append(mainProjectName);
		commandPartBuilder.append(" ").append(shellLineSeparator).append(System.getProperty("line.separator"));

		// -jar
		// /home/madang01/gitsinnori/sinnori/project/sample_test/server_build/dist/SinnoriServerMain.jar
		commandPartBuilder.append("-jar ").append(relativeExecutabeJarFileName);

		return commandPartBuilder.toString();
	}
	
	/**
	 * <project>/resources/mybatis/mybatisConfig.xml
	 */
	public static String getMybatisConfigFileContents(String sinnoriInstalledPathString, 
			String defaultDBCPName,
			List<MybatisEnviroment> mybatisEnviromentList,
			List<MybatisMapper> mybatisMapperList) {
		StringBuilder mybatisConfigStringBuidler = new StringBuilder();
		mybatisConfigStringBuidler.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		mybatisConfigStringBuidler.append("<!DOCTYPE configuration SYSTEM \"");
		mybatisConfigStringBuidler.append(BuildSystemPathSupporter.getMybatisConfigDTDFilePathString(sinnoriInstalledPathString));
		mybatisConfigStringBuidler.append("\">");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		mybatisConfigStringBuidler.append("<configuration>");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		mybatisConfigStringBuidler.append("<environments default=\"");
		mybatisConfigStringBuidler.append(defaultDBCPName);
		mybatisConfigStringBuidler.append("\">");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		
		for (MybatisEnviroment mybatisEnviroment : mybatisEnviromentList) {
			mybatisConfigStringBuidler.append("<environment id=\"");
			mybatisConfigStringBuidler.append(mybatisEnviroment.getDBCPName());
			mybatisConfigStringBuidler.append("\">");
			mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
			mybatisConfigStringBuidler.append("<transactionManager type=\"JDBC\" />");
			mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
			mybatisConfigStringBuidler.append("<dataSource type=\"");
			mybatisConfigStringBuidler.append(mybatisEnviroment.getDataSourceFacotryClassFullName());
			mybatisConfigStringBuidler.append("\"></dataSource>");
			mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
			mybatisConfigStringBuidler.append("</environment>");
			mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		}		
		
		mybatisConfigStringBuidler.append("</environments>");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		mybatisConfigStringBuidler.append("<mappers>");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		
		for (MybatisMapper mybatisMapper : mybatisMapperList) {
			mybatisConfigStringBuidler.append("<mapper resource=\"");
			mybatisConfigStringBuidler.append(mybatisMapper.getMybatisMapperFileRelativePathString());
			mybatisConfigStringBuidler.append("\" />");
			mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		}		
		
		mybatisConfigStringBuidler.append("</mappers>");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		mybatisConfigStringBuidler.append("</configuration>");
		
		return mybatisConfigStringBuidler.toString();
	}
	
	public static String getSample1MybatisMapperFileContents(String sinnoriInstalledPathString, String nameSpace) {
		StringBuilder mybatisConfigStringBuidler = new StringBuilder();
		mybatisConfigStringBuidler.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		mybatisConfigStringBuidler.append("<!DOCTYPE mapper SYSTEM \"");
		mybatisConfigStringBuidler.append(BuildSystemPathSupporter.getMybatisMapperDTDFilePathString(sinnoriInstalledPathString));
		mybatisConfigStringBuidler.append("\">");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		
		mybatisConfigStringBuidler.append("<mapper namespace=\"");
		mybatisConfigStringBuidler.append(nameSpace);
		mybatisConfigStringBuidler.append("\">");
		mybatisConfigStringBuidler.append(CommonStaticFinalVars.NEWLINE);
		
		
		
		mybatisConfigStringBuidler.append("</mapper>");
		
		return mybatisConfigStringBuidler.toString();
	}
}
