<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="sinnori_core_build" default="make.core" basedir=".">
	<description>Sinnori Core Library</description>
	<!-- set global properties for this build -->
	<property name="dir.src" location="src/main/java" />
	<property name="dir.build" location="build" />
	<property name="dir.dist" location="dist" />
	<property name="dir.core.mainlib" location="lib/main" />
	<property name="dir.appinf" location="APP-INF" />
	<property name="dir.guilib" location="guilib" />
	<property name="dir.testsrc" location="src/test/java" />
	<property name="dir.testlib" location="lib/test" />
	<property name="dir.report" location="report" />
	<property name="java.complile.option.debug" value="on" />
	
	<target name="clean.core">
		<!-- Delete the ${dir.build} and ${dir.dist} directory trees -->
		<delete dir="${dir.build}" />
		<delete dir="${dir.dist}" />
	</target>


	<target name="init.core">
		<!-- Create the time stamp -->
		<tstamp />
		<mkdir dir="${dir.core.mainlib}/in" />
		<mkdir dir="${dir.core.mainlib}/ex" />		
		<echo message="java.complile.option.debug=${java.complile.option.debug}" />
	</target>
	
	<union id="logger.logback.jarlibs">
		<fileset file="${dir.core.mainlib}/ex/slf4j-api-1.7.25.jar" />
		<fileset file="${dir.core.mainlib}/ex/jcl-over-slf4j-1.7.25.jar" />
		<fileset file="${dir.core.mainlib}/ex/logback-core-1.2.3.jar" />
		<fileset file="${dir.core.mainlib}/ex/logback-classic-1.2.3.jar" />
	</union>
	
	<union id="logger.jarlibs">
		<union refid="logger.logback.jarlibs" />
		
		<fileset file="${dir.core.mainlib}/ex/commons-logging-1.2.jar" />
		
		<fileset file="${dir.core.mainlib}/ex/log4j-1.2.17.jar" />
		
		<fileset file="${dir.core.mainlib}/ex/log4j-core-2.11.0.jar" />
		<fileset file="${dir.core.mainlib}/ex/log4j-api-2.11.0.jar" />
	</union>
	
	<target name="compile.logger" depends="init.core">
		<mkdir dir="${dir.build}/core_logger" />
		<javac debug="${java.complile.option.debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${dir.src}" destdir="${dir.build}/core_logger">
			<include name="io/netty/util/internal/logging/*.java" />
     
			<classpath>
				<union refid="logger.jarlibs" />
			</classpath>
		</javac>
	</target>	
	
	<union id="core.common.jarlibs">
		<fileset file="${dir.core.mainlib}/ex/json-simple-1.1.1.jar" />
		<fileset file="${dir.core.mainlib}/ex/commons-io-2.6.jar" />
		<fileset file="${dir.core.mainlib}/ex/commons-collections4-4.1.jar" />
		<fileset file="${dir.core.mainlib}/ex/commons-codec-1.11.jar" />		
	</union>
	
	<union id="core.jarlibs">
		<union refid="core.common.jarlibs" />		
		<fileset file="${dir.core.mainlib}/ex/mysql-connector-java-5.1.37-bin.jar" />		
		<fileset file="${dir.core.mainlib}/ex/commons-pool2-2.5.0.jar" />
		<fileset file="${dir.core.mainlib}/ex/commons-dbcp2-2.0.1.jar" />
		<fileset file="${dir.core.mainlib}/ex/jooq-meta-3.10.6.jar" />
		<fileset file="${dir.core.mainlib}/ex/jooq-codegen-3.10.6.jar" />
		<fileset file="${dir.core.mainlib}/ex/jooq-3.10.6.jar" />
	</union>
	
	<target name="compile.common" depends="compile.logger">	
		<mkdir dir="${dir.build}/core_common" />
		
		<javac debug="${java.complile.option.debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${dir.src}" destdir="${dir.build}/core_common">
			<include name="kr/pe/sinnori/common/**" />
			<include name="kr/pe/sinnori/impl/message/SelfExnRes/**" />
			<include name="kr/pe/sinnori/impl/message/Empty/**" />
			<include name="kr/pe/sinnori/impl/task/**/Empty*" />
     
			<classpath>
				<pathelement location="${dir.build}/core_logger/"/>
				<fileset dir="${dir.core.mainlib}/in">
					<include name="**/*.jar" />
				</fileset>
				<union refid="core.common.jarlibs" />
			</classpath>
		</javac>
	</target>

	<target name="make.common" depends="compile.common">
	  <mkdir dir="${dir.dist}" />
	  
		<jar jarfile="${dir.dist}/sinnori-core-common.jar">
			<fileset dir="${dir.build}/core_logger" />
			<fileset dir="${dir.build}/core_common" />
			
			<restrict>
				<name name="**/*.class" />
				<archives>
					<zips>
						<fileset dir="${dir.core.mainlib}/in" includes="**/*.jar" />						
					</zips>
				</archives>
			</restrict>
		</jar>
	</target>

	<target name="compile.server">
		<echo message="this compile.server task doesn't have 'depends' tag so you must call make.common task before this task" />
		
		<mkdir dir="${dir.build}/core_server" />
		<javac debug="${java.complile.option.debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${dir.src}" destdir="${dir.build}/core_server">
			<include name="kr/pe/sinnori/server/**" />
			<classpath>
				<fileset file="${dir.dist}/sinnori-core-common.jar" />
				<union refid="core.jarlibs" />
			</classpath>
		</javac>
	</target>
	
	
	<target name="compile.client">
		<echo message="this compile.client task doesn't have 'depends' tag so you must call make.common task before this task" />
		
		<mkdir dir="${dir.build}/core_client" />
		<javac debug="${java.complile.option.debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${dir.src}" destdir="${dir.build}/core_client">
			<include name="kr/pe/sinnori/client/**" />
			<classpath>
				<fileset file="${dir.dist}/sinnori-core-common.jar" />
				<union refid="core.common.jarlibs" />
			</classpath>
		</javac>
	</target>

	<target name="make.core" depends="make.common, compile.client, compile.server">
		
		
		<jar jarfile="${dir.dist}/sinnori-core.jar">
			<fileset dir="${dir.build}/core_logger" />
			<fileset dir="${dir.build}/core_common" />
			<fileset dir="${dir.build}/core_server" />
			<fileset dir="${dir.build}/core_client" />
			
			<restrict>
				<name name="**/*.class" />
				<archives>
					<zips>
						<fileset dir="${dir.core.mainlib}/in" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
		</jar>
		
		<jar jarfile="${dir.dist}/sinnori-core-client.jar">
			<fileset dir="${dir.build}/core_logger" />
			<fileset dir="${dir.build}/core_common" />
			<fileset dir="${dir.build}/core_client" />
			
			<restrict>
				<name name="**/*.class" />
				<archives>
					<zips>
						<fileset dir="${dir.core.mainlib}/in" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
		</jar>
		
		<jar jarfile="${dir.dist}/sinnori-core-server.jar">
			<fileset dir="${dir.build}/core_logger" />
			<fileset dir="${dir.build}/core_common" />
			<fileset dir="${dir.build}/core_server" />
			<restrict>
				<name name="**/*.class" />
				<archives>
					<zips>
						<fileset dir="${dir.core.mainlib}/in" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
		</jar>
	</target>
	
	
	<target name="clean.test">
		<delete dir="${dir.report}" />
		<mkdir dir="${dir.report}" />
		<delete dir="${dir.build}/test" />
		<mkdir dir="${dir.build}/test" />
	</target>
	
	<target name="compile.test">
		<mkdir dir="${dir.build}/test" />
		<javac debug="${java.complile.option.debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${dir.testsrc}" destdir="${dir.build}/test">			
			<classpath>				
				<fileset file="${dir.dist}/sinnori-core.jar" />
				<union refid="core.jarlibs" />
				<fileset dir="${dir.testlib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>		
	</target>
	
	<target name="test" depends="compile.test">
		<junit printsummary="yes" haltonerror="yes" haltonfailure="yes" fork="yes" showoutput="true">
			<formatter type="xml" />
			<classpath>				
				<fileset file="${dir.dist}/sinnori-core.jar" />
				<union refid="core.jarlibs" />
				<fileset dir="${dir.testlib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath>
				<pathelement location="${dir.build}/test/"/>
			</classpath>
			
			<batchtest todir="${dir.report}"> 
				 <fileset dir="${dir.testsrc}">
					<include name="kr/pe/sinnori/**/*Test.java"/>
					<exclude name="kr/pe/sinnori/common/AbstractJunitTest.java" />
				 </fileset>
			</batchtest>
			
		</junit>
	</target>
		
	
	<target name="clean.helper">
		<delete dir="${dir.build}/helper" />
		<mkdir dir="${dir.build}/helper" />
		<delete file="${dir.dist}/SinnoriHelper.jar" />
	</target>
	
	<target name="compile.helper" depends="compile.logger">
		<mkdir dir="${dir.build}/helper" />
	
		<javac debug="${java.complile.option.debug}" debuglevel="lines,vars,source" encoding="UTF-8" includeantruntime="false" srcdir="${dir.src}" destdir="${dir.build}/helper">
			<!-- compilerarg value="-proc:none"/ -->
			<include name="main/SinnoriHelperMain.java" />			
			<include name="kr/pe/sinnori/gui/**" />
			<include name="kr/pe/sinnori/common/**" />			
			
			<classpath>
				<fileset file="${dir.dist}/sinnori-core-common.jar" />
				<fileset file="${dir.guilib}/*.jar" />
				<union refid="core.common.jarlibs" />
			</classpath>
		</javac>		
	</target>
	
		
	<target name="make.helper" depends="compile.helper">
		<jar jarfile="${dir.dist}/SinnoriHelper.jar" basedir="${dir.build}/helper">
			<restrict>
				<name name="**/*.class" />
				<archives>
					<zips>
						<fileset file="${dir.dist}/sinnori-core-common.jar" />
						<fileset dir="${dir.guilib}" includes="**/*.jar" />						
						<union refid="core.common.jarlibs" />
						<union refid="logger.logback.jarlibs" />
						<fileset dir="${dir.core.mainlib}/in" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
			<manifest>
				<attribute name="Main-Class" value="main.SinnoriHelperMain" />
			</manifest>
		</jar>
	</target>
	
	<target name="dist" depends="make.helper">
        <copy todir=".." verbose="true" overwrite="true">
            <fileset file="${dir.dist}/SinnoriHelper.jar" />
        </copy> 
	</target>

</project>
