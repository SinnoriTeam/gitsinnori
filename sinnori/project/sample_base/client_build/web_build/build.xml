<project name="sample_base_webclient" default="compile.webclass.only" basedir=".">
	<!-- set global properties for this build -->
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="dir.src" location="src/main/java" />
	<property name="dir.build" location="build" />
	<property name="dir.dist" location="dist" />
	<property name="dir.corelib" location="corelib" />
	<property name="dir.mainlib" location="lib/main" />
	<property name="dir.core.build" location="../../../../core_build" />
	<property name="dir.core.mainlib" location="${dir.core.build}/lib/main" />
	<property name="dir.webclass" location="../../web_app_base/ROOT/WEB-INF/classes" />
	<property name="dir.weblib" location="../../web_app_base/ROOT/WEB-INF/lib" />
	<property file="webAnt.properties" />
	<property name="webclient.core.jar" value="SinnoriWebLib.jar" />
	<property name="java.complile.option.debug" value="on" />

	<condition property="is.windows.yes">
		<os family="windows" />
	</condition>
	<condition property="is.unix.yes">
		<os family="unix" />
	</condition>	
	
	<target name="init.dos" if="is.windows.yes">
		<property name="weblib" location="${dos.weblib}" />
	</target>
	<target name="init.unix" if="is.unix.yes">
		<property name="weblib" location="${unix.weblib}" />
	</target>
	
	<target name="init.var" depends="init.dos, init.unix">
	  <!-- Create the time stamp -->
		<tstamp />
		
	  <echo message="java.complile.option.debug=${java.complile.option.debug}" />
	  <echo message="is.windows.yes=${is.windows.yes}, is.unix.yes=${is.unix.yes}" />
		<echo message="servlet.systemlib.path=${servlet.systemlib.path}" />
		
		<!-- lib directory is a user define directory -->
		<mkdir dir="${dir.mainlib}/ex" />
	</target>

	<target name="make.unixcore" if="is.unix.yes" depends="init.var">
		<exec dir="${dir.core.build}" executable="ant" />
	</target>
	
	<target name="make.doscore" if="is.windows.yes" depends="init.var">
		<exec dir="${dir.core.build}" executable="cmd">
			<arg value="/c" />
			<arg value="ant.bat" />
		</exec>
	</target>

	<target name="make.core" depends="make.doscore, make.unixcore" />
	
	<union id="core.common.jarlibs">
		<fileset file="${dir.core.mainlib}/ex/json-simple-1.1.1.jar" />
		<fileset file="${dir.core.mainlib}/ex/commons-io-2.6.jar" />
		<fileset file="${dir.core.mainlib}/ex/commons-collections4-4.1.jar" />
		<fileset file="${dir.core.mainlib}/ex/commons-codec-1.11.jar" />		
	</union>
	
	<target name="copy.core" depends="make.core">
	  <!-- core directory -->
		<delete dir="${dir.corelib}" />
		<mkdir dir="${dir.corelib}/ex" />
		
		<copy todir="${dir.corelib}/ex" verbose="true" overwrite="true">
			<fileset file="${dir.core.build}/dist/sinnori-core.jar" />
		</copy>
		<copy todir="${dir.corelib}/ex" verbose="true" overwrite="true">
			<union refid="core.common.jarlibs" />
		</copy>		
	</target>

	<target name="compile.weblib" depends="init.var">	
		<delete dir="${dir.build}/weblib" />		
		<mkdir dir="${dir.build}/weblib" />
				
		<javac debug="${java.complile.option.debug}" debuglevel="${debuglevel}" encoding="UTF-8" includeantruntime="false" srcdir="${dir.src}" destdir="${dir.build}/weblib">
			<include name="kr/pe/sinnori/weblib/**" />
			<classpath>		  
				<pathelement location="${dir.webclass}" />
				<fileset dir="${servlet.systemlib.path}">
					<include name="**/*-api.jar" />
				</fileset>
				<fileset dir="${dir.corelib}\ex">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${dir.mainlib}\ex">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	
	<target name="make.weblib" depends="compile.weblib">
	 <delete dir="${dir.dist}" />
		<mkdir dir="${dir.dist}" />
		
		<jar jarfile="${dir.dist}/${webclient.core.jar}" basedir="${dir.build}/weblib">
			<restrict>
				<name name="**/*.class" />
				<archives>
					<!--
					webclient.core.jar is loaded by tomcat dynamic classloader.
					sinnori core must not be loaded by tomcat dynamic classloader because of singleton pattern.
					so webclient.core.jar doesn't inlucde sinnori core and sinnori core's extern libiary.
					tomcat referes to them using setenv.sh or setenv.bat.
					-->
				</archives>
			</restrict>
		</jar>
	</target>

	<target name="dist.weblib" depends="make.weblib">
	 <mkdir dir="${dir.weblib}" />
	 
		<copy todir="${dir.weblib}" verbose="true" overwrite="true">
			<fileset file="${dir.dist}/${webclient.core.jar}" />
			<fileset file="${dir.mainlib}/ex/*.jar" />
		</copy>
	</target>
	
	<target name="compile.webclass" depends="dist.weblib">
	 <!-- webclass directory is a user define directory that has the web-application dynamic classes -->
		<delete dir="${dir.webclass}" />
		<mkdir dir="${dir.webclass}" />
		
		<javac debug="${java.complile.option.debug}" debuglevel="${debuglevel}" encoding="UTF-8" 
		includeantruntime="false" srcdir="${dir.src}" destdir="${dir.webclass}"
		excludes="kr/pe/sinnori/weblib/**" >
			<classpath>
				<fileset dir="${dir.dist}">
					<include name="${webclient.core.jar}" />
				</fileset>
				<fileset dir="${servlet.systemlib.path}/">
					<include name="*-api.jar" />
				</fileset>
				<fileset dir="${dir.corelib}\ex">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${dir.mainlib}\ex">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="all" depends="compile.webclass">
		<echo message="is.windows.yes=${is.windows.yes}, is.unix.yes=${is.unix.yes}, java.debug=${java.complile.option.debug}" />
	</target>
	
	<target name="clean.webclass" depends="init.var">
		<delete dir="${dir.webclass}" />
		<mkdir dir="${dir.webclass}" />
	</target>
	
<target name="compile.webclass.only" depends="init.var">
		<javac debug="${java.complile.option.debug}" debuglevel="${debuglevel}" encoding="UTF-8" 
		includeantruntime="false" srcdir="${dir.src}" destdir="${dir.webclass}"
		excludes="kr/pe/sinnori/common/**" >
			<classpath>
				<fileset dir="${dir.dist}">
					<include name="${webclient.core.jar}" />
				</fileset>
				<fileset dir="${servlet.systemlib.path}/">
					<include name="*-api.jar" />
				</fileset>
				<fileset dir="${dir.corelib}\ex">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${dir.mainlib}\ex">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
</project>